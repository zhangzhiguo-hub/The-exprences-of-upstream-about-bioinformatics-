1.基本信息设置
（1）设置用户名
git config --global user.name "zhangzhiguo-hub"#若不加--global参数则只对当前仓库有效
（2）设置用户邮箱
git config --global user.email "2474065454@qq.com"
（3）查看设置信息
git config --list
（4）脚下留心：a.命令行窗口使用的是Linux命令。b.该设置在github仓库主页显示谁提交了该文件

2.初始化一个仓库（初始化一次就记住了，不需要每次都初始化）
（1）新建一个文件夹准备存放仓库
mkdir xx/demol
（2）在文件夹内初始化Git(创建Git仓库)
cd xx/demol 
git init（显示隐藏的git仓库文件夹，其中存放配置信息)

3.基本操作
Git分为三个区，包括：工作区（WorKing Directory）、暂存区、Git仓库（Git Repository）（属于本地仓库）
（1）git status #查看当前文件状态
（2）git add xx.houzhui，将文件从工作区提交到暂存区(--all表示将文件夹内所有文件提交)
（3）git commit -m "提交描述"，将文件从暂存区提交到本地仓库
         git branch -M main#可选择相应的分支
（4）在仓库文件夹中创建文件后， 即将文件置于工作区，git status可查看文件状态
（5）删除仓库文件
rm -rf xxx.houzhui #删除文件夹中文件
git rm xxx.houzhui #删除Git仓库中的文件
git commit -m "添加描述" #提交操作
（6）查看版本信息，并作版本之间的切换
git log
1）    此外如果此时我们不想使用第二个版本，想回退到第一个版本，则使用“git reset --hard 版本名”，版本名称取前面一小段即可。设置后再次查看版本信息就会只剩一个了
2）如果我们要再次回到第二个版本，则先使用“git reflog”命令查看历史操作记录，然后使用“git reset --hard 版本名”即可

4.Git远程仓库（备份共享）
（1）配置远程仓库
git remote rm origin#删除原仓库
git remote add origin https://github.com/用户名/仓库名.git
（1）Git克隆操作（下载操作）
git clone 仓库地址
（2）本地仓库同步到远程仓库(git commit -m命令以后操作)
git push 

修改为
[remote"origin"]
  url = https://用户名：密码@github.com/
 
5.GitHub pages搭建网站
（1）访问
https://用户名.github.io
（2）搭建步骤
a. 创建个人站点 -> 新建仓库（注：仓库名必须是【用户名.github.io】）
b.在仓库下新建index.html的文件作为网站首页			
c.脚下留心: github page仅支持静态网页（实际上静态网页也可以出现各种动态的效果，如GIF格式的动画、FLASH、滚动字幕等，只是相比动态网页其不能交互）。仓库里面只能是.html文件


6.Project Page项目站点（慢慢学习）
（1）访问
https://用户名.github.io
（2）搭建步骤
1）进入项目主页，点击settings
2) 在setting页面，找到GitHub page栏，选择项目名称及页面主题

7.命名规则
GIT库名一律采用项目名-类型-年月的形式。其中对项目名的规范如下：
（1） 库名中不得出现下述规定的字符- \ @ ! # $ % ^ & * () [] {} | \ ; : '' ’ ， 。 《 》 < > · ~ 。
（2） 库名应尽量避免使用 名.名的形式。
（3）库名应尽量使用英文，禁止使用中文字符。一般情况下，库名中出现的各个单词的首字母应使用大写。各个单词不能使用连接符 -连接；如有必要，应使用下划线 _ 。
（4）缩写的单词一律使用大写。
（5）对类型的规定如下：
TST——测试项目
BC——已完成项目
SUS——被搁置项目
ING——正在进行的项目
TST-BC——已完成的测试项目
TST-SUS——被搁置的测试项目
TST-ING——正在进行的测试项目
